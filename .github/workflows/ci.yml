name: CI Pipeline

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  test:
    runs-on: ubuntu-latest
    environment: test

    services:
      db:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Start Redis with password
        run: |
          docker run -d --name redis -p 6379:6379 redis:7 redis-server --requirepass "$REDIS_PASSWORD"

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Wait for Redis to be ready
        run: |
          until docker exec redis redis-cli -a "$REDIS_PASSWORD" ping | grep PONG; do
            echo "Waiting for Redis..."
            sleep 2
          done

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest redis

      - name: Run flake8 (code style check)
        run: flake8 .

      - name: Run pytest (tests)
        run: python -m pytest --maxfail=1 --disable-warnings -v

